security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12
    providers:
        users_in_memory:
            memory:
                users:
                    admin: # admin / admin 
                        password: '%env(resolve:ADMIN_PASSWORD)%'
                        roles: 'ROLE_ADMIN'
                    manager: # manager / manager 
                        password: '%env(resolve:MANAGER_PASSWORD)%'
                        roles: 'ROLE_MANAGER'
                    user: # user / user
                        password: '%env(resolve:USER_PASSWORD)%'
                        roles: 'ROLE_USER'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: users_in_memory
            form_login:
                login_path: login
                check_path: login
            logout: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/manage, roles: [ ROLE_ADMIN, ROLE_MANAGER ] }
        - { path: ^/, roles: [ ROLE_ADMIN, ROLE_MANAGER, ROLE_USER, ROLE_API ] }
